# Name of your workflow
name: iOS CI

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for SonarCloud blame information

      - name: Install Tools via Homebrew
        run: |
          brew install sonar-scanner
        
      # Select Xcode version (use latest available)
      - name: Select Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
          xcodebuild -version
          
      - name: Add Xcode Tools to PATH
        run: |
          echo "$(xcode-select -p)/usr/bin" >> $GITHUB_PATH
          echo "$(xcode-select -p)/Toolchains/XcodeDefault.xctoolchain/usr/bin" >> $GITHUB_PATH
          
      - name: Build and Test with Coverage
        run: |
          xcodebuild clean build test \
            -project RelationshipCoach.xcodeproj \
            -scheme "RelationshipCoach" \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.5' \
            -enableCodeCoverage YES 

      # This optional step uploads coverage to Codecov. It can coexist with SonarCloud.
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true # Optional: Fail the build if Codecov upload fails

      # The SonarCloud action will use the SONAR_TOKEN from your secrets
      # and automatically discover the organization and project key if your
      # repository is properly configured on SonarCloud.
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
