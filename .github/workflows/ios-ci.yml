# Name of your workflow
name: iOS CI

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Required for SonarCloud blame information

      - name: Install Tools via Homebrew
        run: |
          brew install sonar-scanner
        
      # Select Xcode version (use latest available)
      - name: Select Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode_16.2.app/Contents/Developer
          xcodebuild -version
          
      - name: Add Xcode Tools to PATH
        run: |
          echo "$(xcode-select -p)/usr/bin" >> $GITHUB_PATH
          echo "$(xcode-select -p)/Toolchains/XcodeDefault.xctoolchain/usr/bin" >> $GITHUB_PATH
          
      - name: Build and Test with Coverage
        run: |
          xcodebuild clean build test \
            -project RelationshipCoach.xcodeproj \
            -scheme "RelationshipCoach" \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=17.5' \
            -enableCodeCoverage YES 

      # This step converts Xcode's .xcresult format to SonarCloud's generic format
      - name: Convert coverage report to SonarCloud format
        run: |
          # Download the conversion script from SonarSource's official examples
          curl -sSLo xccov-to-sonarqube-generic.sh https://raw.githubusercontent.com/SonarSource/sonar-scanning-examples/master/swift-coverage/xccov-to-sonarqube-generic.sh
          chmod +x xccov-to-sonarqube-generic.sh

          # Find the .xcresult bundle generated by the build.
          # We search the entire Build directory to be robust against Xcode version changes.
          echo "Searching for .xcresult file..."
          XCRESULT_PATH=$(find Build -name "*.xcresult" | head -n 1)

          if [[ -z "$XCRESULT_PATH" ]]; then
            echo "Error: .xcresult file not found in the 'Build' directory."
            exit 1
          fi
          
          echo "Found .xcresult bundle at: ${XCRESULT_PATH}"

          # Execute the conversion
          ./xccov-to-sonarqube-generic.sh "${XCRESULT_PATH}" > sonarqube-generic-coverage.xml

      # This optional step uploads coverage to Codecov. It can coexist with SonarCloud.
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true # Optional: Fail the build if Codecov upload fails

      # The SonarCloud action will use the SONAR_TOKEN from your secrets
      # and automatically discover the organization and project key if your
      # repository is properly configured on SonarCloud.
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          # Pass analysis parameters to the scanner.
          # This is an alternative to using a sonar-project.properties file.
          args: >
            -Dsonar.swift.coverage.reportPaths=sonarqube-generic-coverage.xml
            -Dsonar.cfamily.build-wrapper-output.bypass=true
