# .github/workflows/ios-ci.yml

name: iOS CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Job 1: Build the app, run tests, and generate all necessary reports.
  build-and-test:
    name: Build and Test
    runs-on: macos-latest # Xcode builds must run on macOS

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          # SonarCloud requires the full git history to assign issues correctly.
          fetch-depth: 0

      # The setup-xcode action selects the Xcode version to use.
      # Using a specific, known-stable version like '15.4' is more reliable.
      - name: Select Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      # This action downloads the SonarQube build-wrapper.
      # Using the official casing and a specific version tag is more robust.
      - name: Setup SonarQube Build Wrapper
        uses: SonarSource/sonar-scanner-cli-action@v2.0.0

      - name: Run Build & Tests with Coverage and Wrapper
        run: |
          # The build-wrapper intercepts the compiler calls to understand the project structure.
          build-wrapper-macos-x86-64 --out-dir sonar-build-wrapper-output \
            xcodebuild clean test \
              -project RelationshipCoach.xcodeproj \
              -scheme "RelationshipCoach" \
              -destination 'platform=iOS Simulator,name=iPhone 15 Pro,OS=latest' \
              -resultBundlePath 'test-results' \
              -enableCodeCoverage YES \
              CODE_SIGNING_ALLOWED=NO

      # Upload the test results (including coverage data) as an artifact for the Codecov job.
      - name: Upload Test Results Artifact (for Codecov)
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xcresult

      # Upload the SonarQube build-wrapper output as an artifact for the SonarQube job.
      - name: Upload SonarQube Build Wrapper Artifact
        uses: actions/upload-artifact@v4
        with:
          name: sonar-build-wrapper-output
          path: sonar-build-wrapper-output/

  # Job 2: Upload coverage report to Codecov.
  codecov:
    name: Upload to Codecov
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Test Results Artifact
        uses: actions/download-artifact@v4
        with:
          name: test-results

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./test-results.xcresult
          flags: unittests

  # Job 3: Run SonarQube analysis.
  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download SonarQube Build Wrapper Artifact
        uses: actions/download-artifact@v4
        with:
          name: sonar-build-wrapper-output
          path: sonar-build-wrapper-output/

      # This action sets up the sonar-scanner CLI.
      # Using the official casing and a specific version tag is more robust.
      - name: Setup SonarQube Scanner
        uses: SonarSource/sonar-scanner-cli-action@v2.0.0

      - name: Run SonarQube Scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=nanirocks125_RelationshipCoach \
            -Dsonar.organization=manikanta-nandam \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.cfamily.build-wrapper-output=sonar-build-wrapper-output
